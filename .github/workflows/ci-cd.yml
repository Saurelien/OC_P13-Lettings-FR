name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            venv/
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python and Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage

      - name: Run tests with coverage
        run: |
          . venv/bin/activate
          coverage run manage.py test
          coverage report -m
          coverage html

      - name: Archive coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov/

      - name: Clean up
        run: |
          rm -rf venv/
          rm -rf htmlcov/

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/oc_lettings_site:${{ github.sha }} .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/oc_lettings_site:${{ github.sha }}

      - name: Run Docker image linting
        run: |
          docker run --rm hadolint/hadolint < Dockerfile

      - name: List all files (debugging)
        run: ls -la